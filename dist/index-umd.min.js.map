{"version":3,"file":"index-umd.min.js","sources":["../lib/NormalizerParser.js","../lib/Normalizer.js"],"sourcesContent":["/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,4],$V1=[1,6],$V2=[1,8],$V3=[1,7],$V4=[8,27,28,39,42,45,47],$V5=[1,36],$V6=[1,35],$V7=[1,6,19,20,21,22,23,24,25,27,28,30,31,33,35,37,39,41,42,51,55,58,63,67,73],$V8=[28,39,42],$V9=[1,51],$Va=[1,55],$Vb=[1,56],$Vc=[1,70],$Vd=[1,58],$Ve=[1,59],$Vf=[1,60],$Vg=[1,71],$Vh=[1,61],$Vi=[1,62],$Vj=[1,64],$Vk=[1,66],$Vl=[1,68],$Vm=[1,69],$Vn=[1,81],$Vo=[1,82],$Vp=[1,83],$Vq=[1,84],$Vr=[1,76],$Vs=[1,80],$Vt=[1,73],$Vu=[1,88],$Vv=[19,20,21,22,23,24,25,27,28,30,31,33,35,37,39,41,42,51,55,58,63,67,73],$Vw=[1,95],$Vx=[1,100],$Vy=[22,27,28,39,42,63],$Vz=[1,110],$VA=[28,39,42,51],$VB=[1,116],$VC=[22,58,63],$VD=[22,58,63,67],$VE=[28,63],$VF=[22,63],$VG=[1,134],$VH=[1,143],$VI=[1,142],$VJ=[58,63],$VK=[28,39,42,55],$VL=[19,20,21,23,24,25,27,28,30,31,33,35,37,39,41,42,51,55],$VM=[19,20,21,23,24,25,27,28,30,31,33,35,37,39,41,42];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"program\":3,\"typeDeclarations\":4,\"typeDeclaration\":5,\"TYPE\":6,\"stringOrIdentifier\":7,\"=\":8,\"typeDescription\":9,\"anyDescription\":10,\"arrayDescription\":11,\"booleanDescription\":12,\"enumerationDescription\":13,\"nullDescription\":14,\"numberDescription\":15,\"objectDescription\":16,\"stringDescription\":17,\"undefinedDescription\":18,\"ANY_TYPE\":19,\"ARRAY_TYPE\":20,\"[\":21,\"]\":22,\"BOOLEAN_TYPE\":23,\"TRUE\":24,\"FALSE\":25,\"ENUMERATION\":26,\"{\":27,\"}\":28,\"identifiers\":29,\"NULL_TYPE\":30,\"NUMBER_TYPE\":31,\"float\":32,\"OBJECT_TYPE\":33,\"canonicalProperties\":34,\"STRING_TYPE\":35,\"string\":36,\"UNDEFINED_TYPE\":37,\"boolean\":38,\"STRING\":39,\"integer\":40,\"NUMBER\":41,\"IDENTIFIER\":42,\"canonicalProperty\":43,\"groupBlock\":44,\":\":45,\"typePattern\":46,\"<=\":47,\"expression\":48,\"groups\":49,\"group\":50,\"GROUP\":51,\"patternMatches\":52,\"namedTypePattern\":53,\"patternMatch\":54,\"MATCH\":55,\"typePatterns\":56,\"(\":57,\")\":58,\"parameterList\":59,\"arrayExpression\":60,\"objectExpression\":61,\"expressionElements\":62,\",\":63,\"expressionElement\":64,\"expressionProperties\":65,\"expressionProperty\":66,\"AS\":67,\"arrayPattern\":68,\"objectPattern\":69,\"patternElements\":70,\"namedPatternElement\":71,\"patternElement\":72,\";\":73,\"range\":74,\"..\":75,\"patternProperties\":76,\"namedPatternProperty\":77,\"namedProperty\":78,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",6:\"TYPE\",8:\"=\",19:\"ANY_TYPE\",20:\"ARRAY_TYPE\",21:\"[\",22:\"]\",23:\"BOOLEAN_TYPE\",24:\"TRUE\",25:\"FALSE\",26:\"ENUMERATION\",27:\"{\",28:\"}\",30:\"NULL_TYPE\",31:\"NUMBER_TYPE\",33:\"OBJECT_TYPE\",35:\"STRING_TYPE\",37:\"UNDEFINED_TYPE\",39:\"STRING\",41:\"NUMBER\",42:\"IDENTIFIER\",45:\":\",47:\"<=\",51:\"GROUP\",55:\"MATCH\",57:\"(\",58:\")\",63:\",\",67:\"AS\",73:\";\",75:\"..\"},\nproductions_: [0,[3,1],[4,2],[4,1],[5,4],[9,1],[9,1],[9,1],[9,1],[9,1],[9,1],[9,1],[9,1],[9,1],[10,1],[11,1],[11,2],[12,1],[12,1],[12,1],[13,3],[13,4],[14,1],[15,1],[15,1],[16,1],[16,2],[16,3],[17,1],[17,1],[18,1],[29,2],[29,1],[38,1],[38,1],[36,1],[40,1],[32,1],[7,1],[7,1],[34,2],[34,1],[43,1],[43,2],[43,3],[43,3],[43,4],[44,2],[44,3],[49,2],[49,1],[50,4],[50,3],[52,2],[52,1],[54,4],[54,5],[54,3],[48,1],[48,3],[48,4],[48,1],[48,1],[48,1],[48,1],[48,1],[48,1],[48,1],[60,2],[60,3],[62,3],[62,1],[64,1],[61,2],[61,3],[65,3],[65,1],[66,3],[66,1],[59,3],[59,1],[56,2],[56,1],[53,1],[53,3],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[46,1],[68,2],[68,3],[70,3],[70,1],[71,1],[71,3],[72,1],[72,3],[72,3],[72,5],[74,3],[74,2],[74,2],[74,1],[69,2],[69,3],[76,3],[76,1],[77,1],[77,3],[78,3]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nreturn $$[$0];\nbreak;\ncase 2: case 31: case 40: case 49: case 53: case 81:\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1]\nbreak;\ncase 3: case 32: case 41: case 50: case 54: case 71: case 76: case 80: case 82: case 103: case 117:\nthis.$ = [ $$[$0] ];\nbreak;\ncase 4:\nthis.$ = { type: 'type-declaration', name: $$[$0-2], declaration: $$[$0] };\nbreak;\ncase 14:\nthis.$ = { type: 'any', value: null };\nbreak;\ncase 15:\nthis.$ = { type: 'array', value: null };\nbreak;\ncase 16:\nthis.$ = { type: 'array-instance', value: [] };\nbreak;\ncase 17:\nthis.$ = { type: 'boolean', value: null };\nbreak;\ncase 18:\nthis.$ = { type: 'boolean-instance', value: true };\nbreak;\ncase 19:\nthis.$ = { type: 'boolean-instance', value: false };\nbreak;\ncase 20:\nthis.$ = { type: 'enumeration', value: [] };\nbreak;\ncase 21:\nthis.$ = { type: 'enumeration', value: $$[$0-1] };\nbreak;\ncase 22:\nthis.$ = { type: 'null', value: null };\nbreak;\ncase 23:\nthis.$ = { type: 'number', value: null };\nbreak;\ncase 24:\nthis.$ = { type: 'number-instance', value: $$[$0] };\nbreak;\ncase 25:\nthis.$ = { type: 'object', value: null };\nbreak;\ncase 26:\nthis.$ = { type: 'object-instance', value: {} };\nbreak;\ncase 27:\nthis.$ = { type: 'object-instance', value: $$[$0-1] };\nbreak;\ncase 28:\nthis.$ = { type: 'string', value: null };\nbreak;\ncase 29:\nthis.$ = { type: 'string-instance', value: $$[$0]};\nbreak;\ncase 30:\nthis.$ = { type: 'undefined', value: null };\nbreak;\ncase 33:\nthis.$ = true;\nbreak;\ncase 34:\nthis.$ = false;\nbreak;\ncase 35: case 39:\nthis.$ = $$[$0].substring(1,  $$[$0].length - 1);\nbreak;\ncase 36:\nthis.$ = parseInt($$[$0]);\nbreak;\ncase 37:\nthis.$ = parseFloat($$[$0]);\nbreak;\ncase 38: case 72:\nthis.$ = $$[$0]\nbreak;\ncase 42:\nthis.$ = { type: 'canonical-property', name: $$[$0], groups: [], returnValue: null };\nbreak;\ncase 43:\nthis.$ = { type: 'canonical-property', name: $$[$0-1], groups: $$[$0], returnValue: null };\nbreak;\ncase 44:\nthis.$ = {\n    type: \"canonical-property\",\n    name: $$[$0-2],\n    groups: [\n        {\n            type: \"group\",\n            matches: [ { type: \"match\", name: $$[$0-2], patterns: [ $$[$0] ] } ]\n        }\n    ],\n    returnValue: null\n};\nbreak;\ncase 45:\nthis.$ = { type: 'canonical-property', name: $$[$0-2], groups: [], returnValue: $$[$0] };\nbreak;\ncase 46:\nthis.$ = { type: 'canonical-property', name: $$[$0-3], groups: $$[$0], returnValue: $$[$0-1] };\nbreak;\ncase 47:\nthis.$ = [];\nbreak;\ncase 48:\nthis.$ = $$[$0-1];\nbreak;\ncase 51:\nthis.$ = { type: 'group', matches: $$[$0-1] };\nbreak;\ncase 52:\nthis.$ = { type: 'group', matches: [ { type: 'match', name: $$[$0-2], patterns: [ $$[$0] ] } ] };\nbreak;\ncase 55:\nthis.$ = { type: 'match', name: $$[$0-2], patterns: [] };\nbreak;\ncase 56:\nthis.$ = { type: 'match', name: $$[$0-3], patterns: $$[$0-1] };\nbreak;\ncase 57:\nthis.$ = { type: \"match\", name: $$[$0-2], patterns: [ $$[$0] ] }\nbreak;\ncase 58:\nthis.$ = { type: 'expression', expression: { type: 'get-value', name: $$[$0] } };\nbreak;\ncase 59:\nthis.$ = { type: 'expression', expression: { type: 'invoke', name: $$[$0-2], args: [] } };\nbreak;\ncase 60:\nthis.$ = { type: 'expression', expression: { type: 'invoke', name: $$[$0-3], args: $$[$0-1] } };\nbreak;\ncase 61: case 66:\nthis.$ = { type: 'expression', expression: $$[$0] };\nbreak;\ncase 62:\nthis.$ = { type: 'expression', expression: { type: 'boolean', value: $$[$0] } };\nbreak;\ncase 63:\nthis.$ = { type: 'expression', expression: { type: 'boolean', value: null } };\nbreak;\ncase 64:\nthis.$ = { type: 'expression', expression: { type: 'number', value: $$[$0] } };\nbreak;\ncase 65:\nthis.$ = { type: 'expression', expression: { type: 'string', value: $$[$0] } };\nbreak;\ncase 67:\nthis.$ = { type: 'expression', expression: { type: 'string', value: undefined } };\nbreak;\ncase 68:\nthis.$ = { type: 'array', value: [] };\nbreak;\ncase 69:\nthis.$ = { type: 'array', value: $$[$0-1] };\nbreak;\ncase 70: case 75: case 79: case 102: case 116:\n$$[$0-2].push($$[$0]); this.$ = $$[$0-2]\nbreak;\ncase 73:\nthis.$ = { type: 'object', value: [] };\nbreak;\ncase 74:\nthis.$ = { type: 'object', value: $$[$0-1] };\nbreak;\ncase 77:\n$$[$0].name = $$[$0-2]; this.$ = $$[$0];\nbreak;\ncase 78:\nthis.$ = { type: 'expression', name: $$[$0], expression: { type: 'get-value', name: $$[$0] } };\nbreak;\ncase 83: case 104:\n$$[$0].assignTo = null; this.$ = $$[$0];\nbreak;\ncase 84: case 105: case 119:\n$$[$0-2].assignTo = $$[$0]; this.$ = $$[$0-2];\nbreak;\ncase 85:\nthis.$ = { type: 'pattern', patternType: 'any', value: null };\nbreak;\ncase 86:\nthis.$ = { type: 'pattern', patternType: 'array', value: null };\nbreak;\ncase 87: case 95:\nthis.$ = $$[$0];\nbreak;\ncase 88:\nthis.$ = { type: 'pattern', patternType: 'boolean', value: null };\nbreak;\ncase 89:\nthis.$ = { type: 'pattern', patternType: 'boolean', value: true };\nbreak;\ncase 90:\nthis.$ = { type: 'pattern', patternType: 'boolean', value: false };\nbreak;\ncase 91:\nthis.$ = { type: 'pattern', patternType: 'null', value: null };\nbreak;\ncase 92:\nthis.$ = { type: 'pattern', patternType: 'number', value: null };\nbreak;\ncase 93:\nthis.$ = { type: 'pattern', patternType: 'number', value: $$[$0] };\nbreak;\ncase 94: case 114:\nthis.$ = { type: 'pattern', patternType: 'object', value: null };\nbreak;\ncase 96:\nthis.$ = { type: 'pattern', patternType: 'string', value: null };\nbreak;\ncase 97:\nthis.$ = { type: 'pattern', patternType: 'string', value: $$[$0] };\nbreak;\ncase 98:\nthis.$ = { type: 'pattern', patternType: 'undefined', value: null };\nbreak;\ncase 99:\nthis.$ = { type: 'pattern', value: $$[$0] };\nbreak;\ncase 100:\nthis.$ = { type: 'pattern', patternType: 'array-pattern', value: [] };\nbreak;\ncase 101:\nthis.$ = { type: 'pattern', patternType: 'array-pattern', value: $$[$0-1] };\nbreak;\ncase 106:\nthis.$ = { type: 'element', pattern: $$[$0], range: { type: 'range', start: 1, stop: 1 } };\nbreak;\ncase 107:\nthis.$ = { type: 'element', pattern: $$[$0-2], range: $$[$0] };\nbreak;\ncase 108:\nthis.$ = { type: 'element-group', elements: $$[$0-1], range: { type: 'range', start: 1, stop: 1 } };\nbreak;\ncase 109:\nthis.$ = { type: 'element-group', elements: $$[$0-3], range: $$[$0] };\nbreak;\ncase 110:\nthis.$ = { type: 'range', start: $$[$0-2], stop: $$[$0] };\nbreak;\ncase 111:\nthis.$ = { type: 'range', start: 0, stop: $$[$0] };\nbreak;\ncase 112:\nthis.$ = { type: 'range', start: $$[$0-1], stop: Infinity };\nbreak;\ncase 113:\nthis.$ = { type: 'range', start: $$[$0], stop: $$[$0] };\nbreak;\ncase 115:\nthis.$ = { type: 'pattern', patternType: 'object-pattern', value: $$[$0-1] };\nbreak;\ncase 118:\n$$[$0].assignTo = $$[$0].name; this.$ = $$[$0];\nbreak;\ncase 120:\nthis.$ = { type: 'property', name: $$[$0-2], pattern: $$[$0] };\nbreak;\n}\n},\ntable: [{3:1,4:2,5:3,6:$V0},{1:[3]},{1:[2,1],5:5,6:$V0},o($V1,[2,3]),{7:6,39:$V2,42:$V3},o($V1,[2,2]),{8:[1,9]},o($V4,[2,38]),o($V4,[2,39]),{9:10,10:11,11:12,12:13,13:14,14:15,15:16,16:17,17:18,18:19,19:[1,20],20:[1,21],21:[1,22],23:[1,23],24:[1,24],25:[1,25],26:[1,26],27:[1,31],30:[1,27],31:[1,28],32:29,33:[1,30],35:[1,32],36:33,37:[1,34],39:$V5,41:$V6},o($V1,[2,4]),o($V1,[2,5]),o($V1,[2,6]),o($V1,[2,7]),o($V1,[2,8]),o($V1,[2,9]),o($V1,[2,10]),o($V1,[2,11]),o($V1,[2,12]),o($V1,[2,13]),o($V1,[2,14]),o($V1,[2,15]),{22:[1,37]},o($V1,[2,17]),o($V1,[2,18]),o($V1,[2,19]),{27:[1,38]},o($V1,[2,22]),o($V1,[2,23]),o($V1,[2,24]),o($V1,[2,25]),{7:42,28:[1,39],34:40,39:$V2,42:$V3,43:41},o($V1,[2,28]),o($V1,[2,29]),o($V1,[2,30]),o($V7,[2,37]),o($V7,[2,35]),o($V1,[2,16]),{7:45,28:[1,43],29:44,39:$V2,42:$V3},o($V1,[2,26]),{7:42,28:[1,46],39:$V2,42:$V3,43:47},o($V8,[2,41]),o($V8,[2,42],{44:48,27:$V9,45:[1,49],47:[1,50]}),o($V1,[2,20]),{7:53,28:[1,52],39:$V2,42:$V3},o($V8,[2,32]),o($V1,[2,27]),o($V8,[2,40]),o($V8,[2,43]),{19:$Va,20:$Vb,21:$Vc,23:$Vd,24:$Ve,25:$Vf,27:$Vg,30:$Vh,31:$Vi,32:63,33:$Vj,35:$Vk,36:67,37:$Vl,39:$V5,41:$V6,42:$Vm,46:54,68:57,69:65},{21:$Vn,24:$Vo,25:$Vp,27:$Vq,30:$Vr,32:77,36:78,37:$Vs,38:75,39:$V5,41:$V6,42:$Vt,48:72,60:74,61:79},{7:89,28:[1,85],39:$V2,42:$V3,49:86,50:87,51:$Vu},o($V1,[2,21]),o($V8,[2,31]),o($V8,[2,44]),o($Vv,[2,85]),o($Vv,[2,86]),o($Vv,[2,87]),o($Vv,[2,88]),o($Vv,[2,89]),o($Vv,[2,90]),o($Vv,[2,91]),o($Vv,[2,92]),o($Vv,[2,93]),o($Vv,[2,94]),o($Vv,[2,95]),o($Vv,[2,96]),o($Vv,[2,97]),o($Vv,[2,98]),o($Vv,[2,99]),{19:$Va,20:$Vb,21:$Vc,22:[1,90],23:$Vd,24:$Ve,25:$Vf,27:$Vg,30:$Vh,31:$Vi,32:63,33:$Vj,35:$Vk,36:67,37:$Vl,39:$V5,41:$V6,42:$Vm,46:94,57:$Vw,68:57,69:65,70:91,71:92,72:93},{28:[1,96],42:$Vx,76:97,77:98,78:99},o($V8,[2,45],{44:101,27:$V9}),o($Vy,[2,58],{57:[1,102]}),o($Vy,[2,61]),o($Vy,[2,62]),o($Vy,[2,63]),o($Vy,[2,64]),o($Vy,[2,65]),o($Vy,[2,66]),o($Vy,[2,67]),{21:$Vn,22:[1,103],24:$Vo,25:$Vp,27:$Vq,30:$Vr,32:77,36:78,37:$Vs,38:75,39:$V5,41:$V6,42:$Vt,48:106,60:74,61:79,62:104,64:105},o($Vy,[2,33]),o($Vy,[2,34]),{28:[1,107],42:$Vz,65:108,66:109},o($V8,[2,47]),{7:89,28:[1,111],39:$V2,42:$V3,50:112,51:$Vu},o($VA,[2,50]),{27:[1,113]},{45:[1,114]},o($Vv,[2,100]),{22:[1,115],63:$VB},o($VC,[2,103]),o($VC,[2,104],{67:[1,117]}),o($VD,[2,106],{73:[1,118]}),{19:$Va,20:$Vb,21:$Vc,23:$Vd,24:$Ve,25:$Vf,27:$Vg,30:$Vh,31:$Vi,32:63,33:$Vj,35:$Vk,36:67,37:$Vl,39:$V5,41:$V6,42:$Vm,46:94,57:$Vw,68:57,69:65,70:119,71:92,72:93},o($Vv,[2,114]),{28:[1,120],63:[1,121]},o($VE,[2,117]),o($VE,[2,118],{67:[1,122]}),{45:[1,123]},o($V8,[2,46]),{42:[1,126],58:[1,124],59:125},o($Vy,[2,68]),{22:[1,127],63:[1,128]},o($VF,[2,71]),o($VF,[2,72]),o($Vy,[2,73]),{28:[1,129],63:[1,130]},o($VE,[2,76]),o($VE,[2,78],{45:[1,131]}),o($V8,[2,48]),o($VA,[2,49]),{7:135,39:$V2,42:$V3,52:132,54:133,55:$VG},{19:$Va,20:$Vb,21:$Vc,23:$Vd,24:$Ve,25:$Vf,27:$Vg,30:$Vh,31:$Vi,32:63,33:$Vj,35:$Vk,36:67,37:$Vl,39:$V5,41:$V6,42:$Vm,46:137,53:136,68:57,69:65},o($Vv,[2,101]),{19:$Va,20:$Vb,21:$Vc,23:$Vd,24:$Ve,25:$Vf,27:$Vg,30:$Vh,31:$Vi,32:63,33:$Vj,35:$Vk,36:67,37:$Vl,39:$V5,41:$V6,42:$Vm,46:94,57:$Vw,68:57,69:65,71:138,72:93},{42:[1,139]},{40:141,41:$VH,74:140,75:$VI},{58:[1,144],63:$VB},o($Vv,[2,115]),{42:$Vx,77:145,78:99},{42:[1,146]},{19:$Va,20:$Vb,21:$Vc,23:$Vd,24:$Ve,25:$Vf,27:$Vg,30:$Vh,31:$Vi,32:63,33:$Vj,35:$Vk,36:67,37:$Vl,39:$V5,41:$V6,42:$Vm,46:147,68:57,69:65},o($Vy,[2,59]),{58:[1,148],63:[1,149]},o($VJ,[2,80]),o($Vy,[2,69]),{21:$Vn,24:$Vo,25:$Vp,27:$Vq,30:$Vr,32:77,36:78,37:$Vs,38:75,39:$V5,41:$V6,42:$Vt,48:106,60:74,61:79,64:150},o($Vy,[2,74]),{42:$Vz,66:151},{21:$Vn,24:$Vo,25:$Vp,27:$Vq,30:$Vr,32:77,36:78,37:$Vs,38:75,39:$V5,41:$V6,42:$Vt,48:152,60:74,61:79},{7:135,28:[1,153],39:$V2,42:$V3,54:154,55:$VG},o($VK,[2,54]),{7:155,39:$V2,42:$V3},{45:[1,156]},o($VA,[2,52]),o($VL,[2,83],{67:[1,157]}),o($VC,[2,102]),o($VC,[2,105]),o($VD,[2,107]),o($VD,[2,113],{75:[1,158]}),{40:159,41:$VH},o([22,58,63,67,75],[2,36]),o($VD,[2,108],{73:[1,160]}),o($VE,[2,116]),o($VE,[2,119]),o([28,63,67],[2,120]),o($Vy,[2,60]),{42:[1,161]},o($VF,[2,70]),o($VE,[2,75]),o($VE,[2,77]),o($VA,[2,51]),o($VK,[2,53]),{27:[1,162]},{19:$Va,20:$Vb,21:$Vc,23:$Vd,24:$Ve,25:$Vf,27:$Vg,30:$Vh,31:$Vi,32:63,33:$Vj,35:$Vk,36:67,37:$Vl,39:$V5,41:$V6,42:$Vm,46:137,53:163,68:57,69:65},{42:[1,164]},o($VD,[2,112],{40:165,41:$VH}),o($VD,[2,111]),{40:141,41:$VH,74:166,75:$VI},o($VJ,[2,79]),{19:$Va,20:$Vb,21:$Vc,23:$Vd,24:$Ve,25:$Vf,27:$Vg,28:[1,167],30:$Vh,31:$Vi,32:63,33:$Vj,35:$Vk,36:67,37:$Vl,39:$V5,41:$V6,42:$Vm,46:137,53:169,56:168,68:57,69:65},o($VK,[2,57]),o($VL,[2,84]),o($VD,[2,110]),o($VD,[2,109]),o($VK,[2,55]),{19:$Va,20:$Vb,21:$Vc,23:$Vd,24:$Ve,25:$Vf,27:$Vg,28:[1,170],30:$Vh,31:$Vi,32:63,33:$Vj,35:$Vk,36:67,37:$Vl,39:$V5,41:$V6,42:$Vm,46:137,53:171,68:57,69:65},o($VM,[2,82]),o($VK,[2,56]),o($VM,[2,81])],\ndefaultActions: {},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:/* skip comment */\nbreak;\ncase 2:return 19\nbreak;\ncase 3:return 20\nbreak;\ncase 4:return 67\nbreak;\ncase 5:return 23\nbreak;\ncase 6:return 26\nbreak;\ncase 7:return 25\nbreak;\ncase 8:return 51\nbreak;\ncase 9:return 55\nbreak;\ncase 10:return 30\nbreak;\ncase 11:return 31\nbreak;\ncase 12:return 33\nbreak;\ncase 13:return 35\nbreak;\ncase 14:return 24\nbreak;\ncase 15:return 6\nbreak;\ncase 16:return 37\nbreak;\ncase 17:return 57\nbreak;\ncase 18:return 58\nbreak;\ncase 19:return 27\nbreak;\ncase 20:return 28\nbreak;\ncase 21:return 21\nbreak;\ncase 22:return 22\nbreak;\ncase 23:return 63\nbreak;\ncase 24:return 45\nbreak;\ncase 25:return 73\nbreak;\ncase 26:return 8\nbreak;\ncase 27:return 47\nbreak;\ncase 28:return 75\nbreak;\ncase 29:return 42\nbreak;\ncase 30:return 41\nbreak;\ncase 31:return 39\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:\\/\\/.*)/,/^(?:any)/,/^(?:array)/,/^(?:as)/,/^(?:boolean)/,/^(?:enumeration)/,/^(?:false)/,/^(?:group)/,/^(?:match)/,/^(?:null)/,/^(?:number)/,/^(?:object)/,/^(?:string)/,/^(?:true)/,/^(?:type)/,/^(?:undefined)/,/^(?:\\()/,/^(?:\\))/,/^(?:{)/,/^(?:})/,/^(?:\\[)/,/^(?:\\])/,/^(?:,)/,/^(?::)/,/^(?:;)/,/^(?:=)/,/^(?:<=)/,/^(?:\\.\\.)/,/^(?:[a-zA-Z_-][a-zA-Z0-9_-]*)/,/^(?:[-+]?(0|[1-9]\\d*)(\\.\\d+)?)/,/^(?:\"[^\"\\r\\n]*\")/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\nexport default parser;\n","/**\n *  Normalizer.js\n *\n *  @copyright 2019, Kevin Lindsey\n *  @module Normalizer\n */\n\n// import util from \"util\";\n// import Parser from \"./Parser.js\";\nimport Parser from \"./NormalizerParser.js\";\n\nconst FAILURE_VALUE = undefined;\n\n/**\n * Determine if object is something that can have properties\n *\n * @param {*} obj\n * @returns {boolean}\n */\nfunction isObject(obj) {\n    return obj !== null && typeof obj === \"object\";\n}\n\n/**\n * Normalizer\n */\nexport default class Normalizer {\n    /**\n     * Create a new empty Normalizer. Normalizers can be used to validate and transform data. However, when a new\n     * Normalizer has been created, it needs to be populated with one or more type descriptions. The easiest way to do\n     * this is with the static method fromSource.\n     */\n    constructor() {\n        this.patterns = {};\n        this.transforms = {};\n        this.generators = {};\n        // this.typeCheckers = {};\n        this.typeCreators = {};\n        this.messages = [];\n        this.verbose = false;\n    }\n\n    /**\n     * Create a new instance of a Normalizer with its type table initially populated from the specified normalizer\n     * source code.\n     *\n     * @param {string} source\n     * @returns {Normalizer}\n     */\n    static fromSource(source) {\n        const result = new Normalizer();\n\n        result.addDefinitionsFromSource(source);\n\n        return result;\n    }\n\n    /**\n     * Create a new instance of a Normalizer with its type table initially populated from the specified serialization\n     * table. This table can be used to cache a parse normalized file and is the output of Parser.parse()\n     *\n     * @param {Array} table\n     * @returns {Normalizer}\n     */\n    static fromTable(table) {\n        const result = new Normalizer();\n\n        result.addDefinitionsFromTable(table);\n\n        return result;\n    }\n\n    /**\n     * Add all type definitions from the specified normalization source code to this Normalizer instance. This will\n     * amend the current types with those specified in the code. Note that any type that has been redefined in the\n     * source code will replace any pre-existing version of that type.\n     *\n     * @param {string} source\n     */\n    addDefinitionsFromSource(source) {\n        const table = Parser.parse(source);\n\n        this.addDefinitionsFromTable(table);\n    }\n\n    /**\n     * Add all type definitions from the specified serialization table to this Normalizer instance. This will amend the\n     * current types with those specified in the table. Note that any type that has been redefined in the table will\n     * replace any pre-existing version of that type.\n     *\n     * @param {Array} table\n     */\n    addDefinitionsFromTable(table) {\n        table.forEach(typeDescription => {\n            this.types[typeDescription.name] = typeDescription;\n        });\n    }\n\n    /**\n     * Add information\n     *\n     * @param {string} message\n     */\n    addInfo(message) {\n        if (this.verbose) {\n            this.messages.push({type: \"message\", level: \"info\", message});\n        }\n    }\n\n    /**\n     * Add a warning\n     *\n     * @param {string} message\n     */\n    addWarning(message) {\n        this.messages.push({type: \"message\", level: \"warning\", message});\n    }\n\n    /**\n     * Add an error\n     *\n     * @param {string} message\n     */\n    addError(message) {\n        this.messages.push({type: \"message\", level: \"error\", message});\n    }\n\n    /**\n     * Compile and execute the source against the specfied structure\n     *\n     * @param {string} source\n     * @param {*} structure\n     * @returns {*}\n     */\n    run(source, structure) {\n        const statements = Parser.parse(source);\n\n        // console.log(util.inspect(statements, {depth: Infinity, color: true}));\n\n        let result;\n\n        for (const statement of statements) {\n            switch (statement.type) {\n                case \"transform-sequence\":\n                    result = this.runTransforms(statement.transforms, structure);\n\n                    if (result === FAILURE_VALUE) {\n                        break;\n                    }\n                    break;\n\n                case \"generator-assignment\":\n                    this.generators[statement.name] = statement.value;\n                    break;\n\n                case \"pattern-assignment\":\n                    this.patterns[statement.name] = statement.value;\n                    break;\n\n                case \"transform-assignment\":\n                    this.transforms[statement.name] = statement.value;\n                    break;\n\n                default:\n                    this.addError(`unknown statement type: ${statement.type}`);\n                    return FAILURE_VALUE;\n            }\n        }\n\n        return result;\n    }\n\n    runTransforms(transforms, structure) {\n        let currentObject = structure;\n\n        // process transforms in reverse order, passing in the results of one to the next\n        // all transforms must succeed\n        for (let i = transforms.length - 1; i >= 0; i--) {\n            let transform = transforms[i];\n\n            if (transform.type === \"transform-reference\") {\n                if (transform.name in this.transforms) {\n                    transform = this.transforms[transform.name];\n                }\n                else {\n                    this.addError(`undefined transform reference: '${transform.name}'`);\n                    return FAILURE_VALUE;\n                }\n            }\n\n            let result = FAILURE_VALUE;\n\n            for (const pattern of transform.patterns) {\n                const symbolTable = {};\n\n                result = this.normalizePattern(pattern, currentObject, symbolTable);\n\n                // console.log(`currentObject = ${util.inspect(currentObject)}`);\n                // console.log(`transform = ${util.inspect(transform, {depth: Infinity})}`);\n                // console.log(`result = ${util.inspect(result)}`);\n                // console.log(`symbolTable = ${util.inspect(symbolTable)}`);\n\n                if (result !== FAILURE_VALUE) {\n                    // pattern matched, so we can stop\n                    if (transform.returnValue !== null) {\n                        currentObject = this.generateResult(transform.returnValue.expression, symbolTable);\n                    }\n                    else {\n                        currentObject = result;\n                    }\n                    break;\n                }\n            }\n\n            if (result === FAILURE_VALUE) {\n                this.addError(\"Unable to match any type patterns\");\n                return FAILURE_VALUE;\n            }\n        }\n\n        return currentObject;\n    }\n\n    /*\n     * Acquire the value of a type pattern from the specified structure. Any named entities will be populated in the\n     * specified symbolTable\n     *\n     * @param {object} pattern\n     * @param {*} structure\n     * @param {object} symbolTable\n     * @returns {*}\n     */\n    normalizePattern(pattern, structure, symbolTable) {\n        const assign = (name, value) => {\n            if (name !== null && name !== undefined) {\n                if (name in symbolTable) {\n                    console.log(`warning: overwriting ${name} in symbol table`);\n                }\n\n                symbolTable[name] = value;\n            }\n        };\n\n        switch (pattern.patternType) {\n            case \"any\":\n                assign(pattern.assignTo, structure);\n                return structure;\n\n            case \"array\":\n                if (Array.isArray(structure)) {\n                    assign(pattern.assignTo, structure);\n                    return structure;\n                }\n\n                return FAILURE_VALUE;\n\n            case \"array-pattern\": {\n                if (Array.isArray(structure) === false) {\n                    return FAILURE_VALUE;\n                }\n\n                const result = [];\n                let index = 0;\n\n                for (const element of pattern.value) {\n                    const {pattern: elementPattern, range: {start, stop}} = element;\n                    let i;\n\n                    for (i = 0; i < stop; i++) {\n                        const actualIndex = index + i;\n\n                        // treat out-of-bounds like a failure\n                        const value = (actualIndex < structure.length)\n                            ? this.normalizePattern(elementPattern, structure[index + i], symbolTable)\n                            : FAILURE_VALUE;\n\n                        // if we processed enough, continue, else failure\n                        if (value === FAILURE_VALUE) {\n                            if (i >= start) {\n                                break;\n                            }\n\n                            return FAILURE_VALUE;\n                        }\n\n                        // save result\n                        assign(element.assignTo, value);\n                        result.push(value);\n                    }\n\n                    // advance global index by processed amount\n                    index += i;\n                }\n\n                if (index === structure.length) {\n                    assign(pattern.assignTo, structure);\n                    return result;\n                }\n\n                return FAILURE_VALUE;\n            }\n\n            case \"boolean\":\n                if (typeof structure === \"boolean\") {\n                    if (pattern.value === null || pattern.value === structure) {\n                        assign(pattern.assignTo, structure);\n                        return structure;\n                    }\n                }\n\n                return FAILURE_VALUE;\n\n            case \"null\":\n                if (structure === null) {\n                    assign(pattern.assignTo, structure);\n                    return structure;\n                }\n\n                return FAILURE_VALUE;\n\n            case \"number\":\n                if (typeof structure === \"number\") {\n                    if (pattern.value === null || pattern.value === structure) {\n                        assign(pattern.assignTo, structure);\n                        return structure;\n                    }\n                }\n\n                return FAILURE_VALUE;\n\n            case \"object\":\n                if (isObject(structure)) {\n                    assign(pattern.assignTo, structure);\n                    return structure;\n                }\n\n                return FAILURE_VALUE;\n\n            case \"object-pattern\": {\n                if (isObject(structure) === false) {\n                    return FAILURE_VALUE;\n                }\n\n                const result = {};\n\n                for (const property of pattern.value) {\n                    const {name, pattern: propertyPattern, assignTo} = property;\n\n                    if (name in structure) {\n                        const value = this.normalizePattern(propertyPattern, structure[name], symbolTable);\n\n                        if (value === FAILURE_VALUE) {\n                            return FAILURE_VALUE;\n                        }\n\n                        assign(property.assignTo, value);\n                        result[assignTo] = value;\n                    }\n                    else {\n                        return FAILURE_VALUE;\n                    }\n                }\n\n                assign(pattern.assignTo, structure);\n                return result;\n            }\n\n            case \"reference\":\n                if (pattern.value in this.patterns) {\n                    const referencedPattern = this.patterns[pattern.value];\n                    const result = this.normalizePattern(referencedPattern, structure, symbolTable);\n\n                    if (result !== FAILURE_VALUE) {\n                        assign(pattern.assignTo, result);\n                    }\n\n                    return result;\n                }\n\n                return FAILURE_VALUE;\n\n            case \"string\":\n                if (typeof structure === \"string\") {\n                    if (pattern.value === null || pattern.value === structure) {\n                        assign(pattern.assignTo, structure);\n                        return structure;\n                    }\n                }\n\n                return FAILURE_VALUE;\n\n            case \"undefined\":\n                // NOTE: Our current failure value is undefined, so this will be treated as an error. I can change\n                // FAILURE_VALUE to be a sigil. I'll just have to be careful to return undefined at the top-most level.\n                // I'm leaving this for now as this is probably not going to be used much\n                if (structure === undefined) {\n                    assign(pattern.assignTo, structure);\n                    return structure;\n                }\n\n                return FAILURE_VALUE;\n\n            default:\n                throw new TypeError(`unrecognized pattern type: '${pattern.type}'`);\n        }\n    }\n\n    /*\n     * Execute a method and return its value\n     *\n     * @param {object} expression\n     * @param {object} symbolTable\n     * @returns {*}\n     */\n    generateResult(expression, symbolTable) {\n        switch (expression.type) {\n            case \"get-value\":\n                return symbolTable[expression.name];\n\n            case \"invoke\": {\n                const args = expression.args.map(arg => symbolTable[arg]);\n\n                return this.createType(expression.name, args);\n            }\n\n            case \"array\":\n                return expression.value.map(\n                    elementExpression => this.generateResult(elementExpression.expression, symbolTable)\n                );\n\n            case \"boolean\":\n            case \"null\":\n            case \"number\":\n            case \"string\":\n            case \"undefined\":\n                return expression.value;\n\n            case \"object\": {\n                const result = {};\n\n                for (const propertyExpression of expression.value) {\n                    result[propertyExpression.name] = this.generateResult(propertyExpression.expression, symbolTable);\n                }\n\n                return result;\n            }\n\n            default:\n                throw new TypeError(`unsupported expression type: '${expression.type}'`);\n        }\n    }\n\n    /*\n     * Invoke a user-defined method and return its value\n     *\n     * @param {string} type\n     * @param {Array} args\n     * @returns {*}\n     */\n    createType(type, args) {\n        if (type in this.typeCreators) {\n            return this.typeCreators[type](...args);\n        }\n        else if (\"*\" in this.typeCreators) {\n            return this.typeCreators[\"*\"](type, args);\n        }\n\n        return null;\n    }\n}\n"],"names":["parser","o","k","v","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","$VM","trace","yy","symbols_","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","push","$","type","name","declaration","value","substring","parseInt","parseFloat","groups","returnValue","matches","patterns","expression","args","undefined","assignTo","patternType","pattern","range","start","stop","elements","Infinity","table","defaultActions","parseError","str","hash","recoverable","error","Error","parse","input","self","this","stack","tstack","lstack","slice","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","getPrototypeOf","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","lex","token","yyval","errStr","showPosition","join","text","match","line","loc","Array","vstack","first_line","last_line","first_column","last_column","apply","concat","EOF","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","isObject","obj","_typeof","Normalizer","transforms","generators","typeCreators","messages","verbose","source","result","addDefinitionsFromSource","addDefinitionsFromTable","forEach","typeDescription","_this","types","message","level","structure","statements","statement","runTransforms","addError","currentObject","transform","symbolTable","normalizePattern","generateResult","assign","console","log","isArray","element","elementPattern","property","propertyPattern","referencedPattern","TypeError","map","arg","createType","elementExpression","_this2","propertyExpression"],"mappings":"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"}